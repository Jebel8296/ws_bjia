<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamcom.framework.sport.dao.SportInfoTotalMapper" >
  <resultMap id="BaseResultMap" type="com.chinamcom.framework.sport.model.SportInfoTotal" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="sport_type" property="sportType" jdbcType="INTEGER" />
    <result column="step" property="step" jdbcType="INTEGER" />
    <result column="energy" property="energy" jdbcType="INTEGER" />
    <result column="distance" property="distance" jdbcType="INTEGER" />
    <result column="use_time" property="useTime" jdbcType="INTEGER" />
    <result column="upload_time" property="uploadTime" jdbcType="TIMESTAMP" />
    <result column="heart_rate" property="heartRate" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="hour" property="hour" jdbcType="INTEGER" />
    <result column="totalEnergy" property="totalEnergy" jdbcType="INTEGER" />
    <result column="totalDistance" property="totalDistance" jdbcType="INTEGER" />
    <result column="totalUseTime" property="totalUseTime" jdbcType="INTEGER" />
    <result column="time_dimension" property="timeDimension" jdbcType="INTEGER" />
    <result column="val_diemension" property="valDiemension" jdbcType="INTEGER" />
    <result column="target" property="target" jdbcType="INTEGER" />
    <result column="calorie" property="calorie" jdbcType="INTEGER" />
  </resultMap>

<sql id="Base_Column_List" >
    id, imei, sport_type, step, energy, heart_rate, upload_time, distance, use_time, 
    create_time
</sql>

<select id="delaySportInfoTotal" resultMap="BaseResultMap" parameterType="map" >
 <!--    SELECT dv.imei,CASE  WHEN sport_type IS NULL THEN 1 ELSE sport_type END AS sport_type, 
	CASE sport_type WHEN 1 THEN target ELSE 
	(SELECT target FROM app_userinfo WHERE uid = (SELECT uid FROM app_user WHERE imei =dv.imei)) END AS target,
    CASE WHEN step IS NULL THEN 0 ELSE step END AS step,
    CASE WHEN calorie IS NULL THEN 0 ELSE calorie END AS calorie,
    CASE WHEN distance IS NULL THEN 0 ELSE distance END AS distance,
    CASE WHEN time_dimension IS NULL THEN 0 ELSE time_dimension END AS time_dimension
    FROM device_info dv LEFT JOIN (
    SELECT 
    imei, sport_type, Max(step) AS step, Max(energy) AS calorie, 
    Max(distance) AS distance, Max(use_time) AS time_dimension  
    FROM sport_info_total 
    WHERE DATE_FORMAT(`upload_time`,'%Y-%m-%d') = CURDATE() 
    GROUP BY imei,sport_type) AS table_m 
    ON dv.`imei` = table_m.imei
    LEFT JOIN app_user us ON dv.imei = us.`IMEI`
    LEFT JOIN app_userinfo usif ON us.`UID` = usif.`uid` 
    WHERE target IS NOT NULL
     -->
    SELECT dv.imei,CASE  WHEN sport_type IS NULL THEN 1 ELSE sport_type END AS sport_type, 
	CASE sport_type WHEN 1 THEN target ELSE 
	(SELECT target FROM app_userinfo WHERE uid = (SELECT uid FROM app_user WHERE imei =dv.imei)) END AS target,
    CASE WHEN step IS NULL THEN 0 ELSE step END AS step,
    CASE WHEN calorie IS NULL THEN 0 ELSE calorie END AS calorie,
    CASE WHEN distance IS NULL THEN 0 ELSE distance END AS distance,
    CASE WHEN time_dimension IS NULL THEN 0 ELSE time_dimension END AS time_dimension
    FROM device_info dv LEFT JOIN (
    SELECT 
    imei, sport_type, step AS step, energy AS calorie, 
    distance AS distance, use_time AS time_dimension  
    FROM (SELECT 
    * 
    FROM sport_info_total 
    WHERE DATE_FORMAT(`upload_time`,'%Y-%m-%d') = CURDATE() 
    ORDER BY id DESC) AS v  
    GROUP BY imei,sport_type) AS table_m 
    ON dv.`imei` = table_m.imei
    LEFT JOIN app_user us ON dv.imei = us.`IMEI`
    LEFT JOIN app_userinfo usif ON us.`UID` = usif.`uid` 
    WHERE target IS NOT NULL
    </select>

<select id ="queryTodaySportTotal" parameterType="map" resultMap="BaseResultMap">
select HOUR(`upload_time`) AS HOUR, imei,sport_type, Max(step) AS step, Max(energy) AS energy,
Max(distance) AS distance, Max(use_time) AS useTime from sport_info 
<where>
  <trim prefixOverrides="and" >
  and DATE_FORMAT(`upload_time`,'%Y-%m-%d') = CURDATE()
  <if test="imei != null">
  and imei = #{imei,jdbcType=VARCHAR}
  </if>
  <if test="sportType !=null">
  and sport_type = #{sportType,jdbcType=INTEGER}
  </if>
  </trim>
  </where>
  GROUP BY HOUR,imei,sport_type
  </select>
<select id="countTotal" parameterType="map" resultMap="BaseResultMap">
select sport_type ,SUM(step) AS totalStep,SUM(energy) AS totalEnergy, 
SUM(distance) AS totalDistance, SUM(use_time) AS totalUseTime from sport_info_total
<where>
<trim prefixOverrides="and" >
and DATE_FORMAT(`upload_time`,'%Y-%m-%d') = CURDATE()
<if test="imei !=null">
and imei = #{imei,jdbcType=VARCHAR}
</if>
<if test="sportType !=null">
and sport_type = #{sportType,jdbcType=INTEGER}
</if>
</trim>
</where>
GROUP BY imei,sport_type
</select>

<select id="querySportRank" parameterType="map" resultType="java.lang.Integer">
  SELECT rankTable.rownum AS rank FROM (SELECT obj.*, @rownum := @rownum + 1 AS rownum 
  FROM (
  	SELECT * FROM ((SELECT
		a.UID_1 uid,
		CASE IFNULL(a.ALIAS_0,'') WHEN '' THEN c.nickname ELSE a.ALIAS_0 END AS nick_name,
		b.imei,
		c.headimage head_img,
		IFNULL(SUM(d.step), 0) step,
		IFNULL(f.likes_num, 0) likes_num,
		IFNULL(g.status, 0) `status`
	FROM
		app_friendship a
	LEFT JOIN app_user b ON b.UID = a.UID_1
	LEFT JOIN app_userinfo c ON c.uid = a.UID_1
	LEFT JOIN sport_info_total d ON d.imei = b.IMEI AND DATE_FORMAT(d.upload_time,'%Y-%m-%d') = CURDATE()
	LEFT JOIN friend_likes f ON a.UID_1 = f.uid AND f.create_time = CURDATE()
	LEFT JOIN friend_likes_record g ON g.from_uid = #{uid,jdbcType=INTEGER}  AND g.uid = a.UID_1 AND g.create_time = CURDATE() AND g.`status` = 1
	WHERE
		a.UID_0 = #{uid,jdbcType=INTEGER}
	AND a.status = 1
	GROUP BY
		imei
	)
	UNION 
	(SELECT 
	  a.uid,
	  a.nickname nick_name,
	  b.IMEI,
	  a.headimage head_img,
	  IFNULL(SUM(c.step), 0) step,
		IFNULL(d.likes_num, 0) likes_num,
		IFNULL(g.status, 0) `status` 
	FROM app_userinfo a
	LEFT JOIN app_user b ON a.uid =  b.UID
	LEFT JOIN sport_info_total c ON b.IMEI = c.imei AND DATE_FORMAT(c.upload_time,'%Y-%m-%d') = CURDATE()
	LEFT JOIN friend_likes d ON a.uid = d.uid AND d.create_time = CURDATE()
	LEFT JOIN friend_likes_record g ON g.from_uid = #{uid,jdbcType=INTEGER}  AND g.uid = a.uid AND g.create_time = CURDATE() AND g.`status` = 1
	WHERE 
		a.uid = #{uid,jdbcType=INTEGER}
	 ) )a
	ORDER BY a.step DESC) obj,(SELECT @rownum := 0 ) r ) rankTable
	where uid = #{uid,jdbcType=INTEGER}
  </select>
  
  <select id="checkImie" parameterType="map" resultType="java.lang.Integer">
  select count(uid) from app_user where
  uid=#{uid,jdbcType=INTEGER}
  and imei =#{imei,jdbcType=VARCHAR}
  </select>
</mapper>