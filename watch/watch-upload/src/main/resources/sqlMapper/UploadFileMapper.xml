<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinamcom.framework.upload.dao.UploadFileMapper" >
  <resultMap id="BaseResultMap" type="com.chinamcom.framework.upload.model.UploadFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uri" property="uri" jdbcType="VARCHAR" />
    <result column="mime" property="mime" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="right_type" property="rightType" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, uri, mime, name, size, type, website, right_type, created_at, updated_at
  </sql>
  <insert id="insert" parameterType="com.chinamcom.framework.upload.model.UploadFile" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into upload_file (uid, uri, mime, name, size, type, website, right_type, created_at, updated_at)
    values ( #{uid,jdbcType=INTEGER}, #{uri,jdbcType=VARCHAR},
    		 #{mime,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    		 #{size,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR},
    		 #{website,jdbcType=VARCHAR}, #{rightType,jdbcType=VARCHAR},
    		 #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
    		)
  </insert>
  <select id="getUploadFile" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from upload_file
    <where>
    <trim prefixOverrides="and" >
    <if test="uri != null" >
    	and uri=#{uri,jdbcType=VARCHAR}
    </if>
    <if test="website != null" >
    	and website=#{website,jdbcType=VARCHAR}
    </if>
    </trim>
    </where>
  </select>
  <update id="update" parameterType="com.chinamcom.framework.upload.model.UploadFile" >
    update upload_file
    set uid = #{uid,jdbcType=INTEGER},
      	mime = #{mime,jdbcType=VARCHAR},
      	name = #{name,jdbcType=VARCHAR},
      	size = #{size,jdbcType=INTEGER},
      	type = #{type,jdbcType=VARCHAR},
      	uri = #{uri,jdbcType=VARCHAR},
      	website = #{website,jdbcType=VARCHAR},
      	right_type = #{rightType,jdbcType=VARCHAR},
      	created_at = #{createdAt,jdbcType=TIMESTAMP},
      	updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>