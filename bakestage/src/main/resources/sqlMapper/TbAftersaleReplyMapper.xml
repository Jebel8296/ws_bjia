<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinamcom.framework.backstage.mapper.TbAftersaleReplyMapper">
  <resultMap id="BaseResultMap" type="com.chinamcom.framework.backstage.model.TbAftersaleReply">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="afterid" jdbcType="INTEGER" property="afterid" />
    <result column="aftercode" jdbcType="VARCHAR" property="aftercode" />
    <result column="status_from" jdbcType="INTEGER" property="statusFrom" />
    <result column="status_to" jdbcType="INTEGER" property="statusTo" />
    <result column="reply" jdbcType="VARCHAR" property="reply" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    id, afterid, aftercode, status_from, status_to, reply, create_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReplyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_aftersale_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_aftersale_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    delete from tb_aftersale_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReplyExample">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    delete from tb_aftersale_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReply">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    insert into tb_aftersale_reply (id, afterid, aftercode, 
      status_from, status_to, reply, 
      create_time, remark)
    values (#{id,jdbcType=INTEGER}, #{afterid,jdbcType=INTEGER}, #{aftercode,jdbcType=VARCHAR}, 
      #{statusFrom,jdbcType=INTEGER}, #{statusTo,jdbcType=INTEGER}, #{reply,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReply">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    insert into tb_aftersale_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="afterid != null">
        afterid,
      </if>
      <if test="aftercode != null">
        aftercode,
      </if>
      <if test="statusFrom != null">
        status_from,
      </if>
      <if test="statusTo != null">
        status_to,
      </if>
      <if test="reply != null">
        reply,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="afterid != null">
        #{afterid,jdbcType=INTEGER},
      </if>
      <if test="aftercode != null">
        #{aftercode,jdbcType=VARCHAR},
      </if>
      <if test="statusFrom != null">
        #{statusFrom,jdbcType=INTEGER},
      </if>
      <if test="statusTo != null">
        #{statusTo,jdbcType=INTEGER},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReplyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    select count(*) from tb_aftersale_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    update tb_aftersale_reply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.afterid != null">
        afterid = #{record.afterid,jdbcType=INTEGER},
      </if>
      <if test="record.aftercode != null">
        aftercode = #{record.aftercode,jdbcType=VARCHAR},
      </if>
      <if test="record.statusFrom != null">
        status_from = #{record.statusFrom,jdbcType=INTEGER},
      </if>
      <if test="record.statusTo != null">
        status_to = #{record.statusTo,jdbcType=INTEGER},
      </if>
      <if test="record.reply != null">
        reply = #{record.reply,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    update tb_aftersale_reply
    set id = #{record.id,jdbcType=INTEGER},
      afterid = #{record.afterid,jdbcType=INTEGER},
      aftercode = #{record.aftercode,jdbcType=VARCHAR},
      status_from = #{record.statusFrom,jdbcType=INTEGER},
      status_to = #{record.statusTo,jdbcType=INTEGER},
      reply = #{record.reply,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReply">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    update tb_aftersale_reply
    <set>
      <if test="afterid != null">
        afterid = #{afterid,jdbcType=INTEGER},
      </if>
      <if test="aftercode != null">
        aftercode = #{aftercode,jdbcType=VARCHAR},
      </if>
      <if test="statusFrom != null">
        status_from = #{statusFrom,jdbcType=INTEGER},
      </if>
      <if test="statusTo != null">
        status_to = #{statusTo,jdbcType=INTEGER},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinamcom.framework.backstage.model.TbAftersaleReply">
    <!--
      WARNING - @mbggenerated
      Generated on 2017-07-04 15:56:44.
    -->
    update tb_aftersale_reply
    set afterid = #{afterid,jdbcType=INTEGER},
      aftercode = #{aftercode,jdbcType=VARCHAR},
      status_from = #{statusFrom,jdbcType=INTEGER},
      status_to = #{statusTo,jdbcType=INTEGER},
      reply = #{reply,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>